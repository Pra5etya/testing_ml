pengecekan distribusi -> saphio wisk test

transform   -> transformasi log
            -> square root transform 
            -> box cut transform
            -> yeo jhonson transform


Robust regressor:

1. Huber Regressor
Apa itu Huber Regressor?
Huber Regressor adalah model regresi yang robust terhadap outlier. Metode ini menggunakan Huber Loss, yang menggabungkan dua jenis fungsi loss: squared loss untuk error kecil dan absolute loss untuk error besar. Fungsi loss ini memungkinkan Huber Regressor untuk memberikan penalti yang lebih kecil pada outlier dibandingkan dengan Least Squares Regression, yang bisa sangat dipengaruhi oleh outlier ekstrem.

Mengapa Huber Regressor digunakan?
Kelebihan: Huber Regressor efektif ketika ada outlier dalam dataset yang dapat merusak model regresi standar (seperti Linear Regression). Outlier ini akan mempengaruhi prediksi karena Least Squares memberikan bobot yang sangat besar pada kesalahan besar, sementara Huber menggunakan loss yang lebih stabil.
Penggunaan: Jika Anda memiliki data yang relatif bersih tetapi mengandung beberapa outlier, Huber Regressor adalah pilihan yang sangat baik. Ini sangat berguna pada kasus seperti analisis data keuangan, prediksi cuaca, atau data pengukuran yang tidak sempurna.

from sklearn.linear_model import HuberRegressor
from sklearn.datasets import make_regression
from sklearn.model_selection import train_test_split
from sklearn.pipeline import Pipeline
from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import StandardScaler
import numpy as np

# Membuat dataset dengan outlier
X, y = make_regression(n_samples=200, n_features=2, noise=10, random_state=42)
y[::10] += 100  # Menambahkan outlier

# Membagi dataset
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Membuat pipeline dengan ColumnTransformer untuk scaling dan Huber Regressor
pipeline = Pipeline(steps=[
    ('preprocessor', ColumnTransformer([
        ('scaler', StandardScaler(), [0, 1])  # Scaling fitur
    ])),
    ('regressor', HuberRegressor())  # Model Huber Regressor
])

# Melatih model
pipeline.fit(X_train, y_train)

# Evaluasi model
print("Score Huber Regressor:", pipeline.score(X_test, y_test))

Penjelasan Pipeline:

ColumnTransformer digunakan untuk mengubah data (scaling fitur) sebelum diteruskan ke Huber Regressor dalam pipeline.
StandardScaler digunakan untuk menstandarisasi fitur agar memiliki mean = 0 dan variansi = 1, yang membantu algoritma untuk bekerja lebih baik.



2. Theil-Sen Estimator
Apa itu Theil-Sen Estimator?
Theil-Sen Estimator adalah metode regresi robust yang mengestimasi garis terbaik dengan menggunakan median dari kemiringan garis antara semua pasangan titik data. Ini membuat metode ini sangat tahan terhadap outlier ekstrem karena menggunakan median, bukan rata-rata, dalam menghitung slope (kemiringan).

Mengapa Theil-Sen Estimator digunakan?
Kelebihan: Theil-Sen Estimator sangat robust terhadap outlier. Dibandingkan dengan regresi linier tradisional, yang lebih dipengaruhi oleh data ekstrim, Theil-Sen menggunakan median dari kemiringan untuk membangun model. Ini sangat bermanfaat ketika data mengandung banyak noise atau nilai yang tidak biasa.
Penggunaan: Biasanya digunakan dalam aplikasi ilmiah atau teknik, di mana pengukuran sering kali mengandung kesalahan atau outlier yang tidak dapat dihindari. Misalnya, dalam pengukuran fisika atau analisis data ekologi.

from sklearn.linear_model import TheilSenRegressor
from sklearn.pipeline import Pipeline
from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import StandardScaler
from sklearn.datasets import make_regression
from sklearn.model_selection import train_test_split

# Membuat dataset dengan outlier
X, y = make_regression(n_samples=200, n_features=2, noise=10, random_state=42)
y[::10] += 100  # Menambahkan outlier

# Membagi dataset
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Membuat pipeline dengan ColumnTransformer untuk scaling dan Theil-Sen Regressor
pipeline = Pipeline(steps=[
    ('preprocessor', ColumnTransformer([
        ('scaler', StandardScaler(), [0, 1])  # Scaling fitur
    ])),
    ('regressor', TheilSenRegressor())  # Model Theil-Sen Estimator
])

# Melatih model
pipeline.fit(X_train, y_train)

# Evaluasi model
print("Score Theil-Sen Estimator:", pipeline.score(X_test, y_test))

Penjelasan Pipeline:

ColumnTransformer digunakan untuk menstandarisasi data dengan StandardScaler sebelum diteruskan ke Theil-Sen Estimator dalam pipeline.




Untuk memahami penerapan Huber Regressor, Theil-Sen Estimator, dan RANSAC lebih dalam, kita perlu melihat cara setiap metode ini bekerja, serta mengapa dan kapan mereka lebih efektif dibandingkan dengan metode regresi lainnya. Selain itu, kita juga akan membahas bagaimana menerapkan Pipeline dan ColumnTransformer untuk mengelola data yang lebih kompleks dalam skenario dunia nyata.

1. Huber Regressor
Apa itu Huber Regressor?
Huber Regressor adalah model regresi yang robust terhadap outlier. Metode ini menggunakan Huber Loss, yang menggabungkan dua jenis fungsi loss: squared loss untuk error kecil dan absolute loss untuk error besar. Fungsi loss ini memungkinkan Huber Regressor untuk memberikan penalti yang lebih kecil pada outlier dibandingkan dengan Least Squares Regression, yang bisa sangat dipengaruhi oleh outlier ekstrem.

Mengapa Huber Regressor digunakan?
Kelebihan: Huber Regressor efektif ketika ada outlier dalam dataset yang dapat merusak model regresi standar (seperti Linear Regression). Outlier ini akan mempengaruhi prediksi karena Least Squares memberikan bobot yang sangat besar pada kesalahan besar, sementara Huber menggunakan loss yang lebih stabil.
Penggunaan: Jika Anda memiliki data yang relatif bersih tetapi mengandung beberapa outlier, Huber Regressor adalah pilihan yang sangat baik. Ini sangat berguna pada kasus seperti analisis data keuangan, prediksi cuaca, atau data pengukuran yang tidak sempurna.
Contoh Kasus:
Misalkan kita memiliki dataset harga rumah, dengan beberapa harga yang jauh lebih tinggi atau lebih rendah dari harga rumah lainnya (outlier). Huber Regressor dapat mengatasi hal ini dengan lebih baik daripada Linear Regression, yang akan terpengaruh oleh harga yang sangat ekstrim.

Kode dengan Pipeline dan ColumnTransformer:
python
Copy code
from sklearn.linear_model import HuberRegressor
from sklearn.datasets import make_regression
from sklearn.model_selection import train_test_split
from sklearn.pipeline import Pipeline
from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import StandardScaler
import numpy as np

# Membuat dataset dengan outlier
X, y = make_regression(n_samples=200, n_features=2, noise=10, random_state=42)
y[::10] += 100  # Menambahkan outlier

# Membagi dataset
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Membuat pipeline dengan ColumnTransformer untuk scaling dan Huber Regressor
pipeline = Pipeline(steps=[
    ('preprocessor', ColumnTransformer([
        ('scaler', StandardScaler(), [0, 1])  # Scaling fitur
    ])),
    ('regressor', HuberRegressor())  # Model Huber Regressor
])

# Melatih model
pipeline.fit(X_train, y_train)

# Evaluasi model
print("Score Huber Regressor:", pipeline.score(X_test, y_test))
Penjelasan Pipeline:

ColumnTransformer digunakan untuk mengubah data (scaling fitur) sebelum diteruskan ke Huber Regressor dalam pipeline.
StandardScaler digunakan untuk menstandarisasi fitur agar memiliki mean = 0 dan variansi = 1, yang membantu algoritma untuk bekerja lebih baik.
2. Theil-Sen Estimator
Apa itu Theil-Sen Estimator?
Theil-Sen Estimator adalah metode regresi robust yang mengestimasi garis terbaik dengan menggunakan median dari kemiringan garis antara semua pasangan titik data. Ini membuat metode ini sangat tahan terhadap outlier ekstrem karena menggunakan median, bukan rata-rata, dalam menghitung slope (kemiringan).

Mengapa Theil-Sen Estimator digunakan?
Kelebihan: Theil-Sen Estimator sangat robust terhadap outlier. Dibandingkan dengan regresi linier tradisional, yang lebih dipengaruhi oleh data ekstrim, Theil-Sen menggunakan median dari kemiringan untuk membangun model. Ini sangat bermanfaat ketika data mengandung banyak noise atau nilai yang tidak biasa.
Penggunaan: Biasanya digunakan dalam aplikasi ilmiah atau teknik, di mana pengukuran sering kali mengandung kesalahan atau outlier yang tidak dapat dihindari. Misalnya, dalam pengukuran fisika atau analisis data ekologi.
Contoh Kasus:
Misalnya, kita memiliki dataset dari eksperimen fisika yang mengukur hubungan antara dua variabel yang diharapkan berhubungan secara linier. Namun, eksperimen ini menghasilkan beberapa data yang jauh berbeda dari pola umum (outlier). Theil-Sen Estimator akan bekerja lebih baik daripada regresi linier biasa dalam kasus ini.

Kode dengan Pipeline dan ColumnTransformer:
python
Copy code
from sklearn.linear_model import TheilSenRegressor
from sklearn.pipeline import Pipeline
from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import StandardScaler
from sklearn.datasets import make_regression
from sklearn.model_selection import train_test_split

# Membuat dataset dengan outlier
X, y = make_regression(n_samples=200, n_features=2, noise=10, random_state=42)
y[::10] += 100  # Menambahkan outlier

# Membagi dataset
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Membuat pipeline dengan ColumnTransformer untuk scaling dan Theil-Sen Regressor
pipeline = Pipeline(steps=[
    ('preprocessor', ColumnTransformer([
        ('scaler', StandardScaler(), [0, 1])  # Scaling fitur
    ])),
    ('regressor', TheilSenRegressor())  # Model Theil-Sen Estimator
])

# Melatih model
pipeline.fit(X_train, y_train)

# Evaluasi model
print("Score Theil-Sen Estimator:", pipeline.score(X_test, y_test))
Penjelasan Pipeline:

ColumnTransformer digunakan untuk menstandarisasi data dengan StandardScaler sebelum diteruskan ke Theil-Sen Estimator dalam pipeline.
3. RANSAC
Apa itu RANSAC?
RANSAC (RANdom SAmple Consensus) adalah algoritma yang sangat robust terhadap outlier. RANSAC memilih subset acak dari data, mengestimasi model berdasarkan subset ini, dan kemudian memeriksa seberapa banyak data yang sesuai dengan model yang dihasilkan (inliers). Proses ini diulang untuk mencari model yang paling cocok.

Mengapa RANSAC digunakan?
Kelebihan: RANSAC sangat efektif ketika data mengandung banyak outlier yang bisa merusak model. Dengan memilih subset acak dari data, RANSAC dapat menghindari pengaruh data yang tidak relevan (outliers) dan menemukan model yang lebih representatif untuk data yang tersisa.
Penggunaan: Digunakan dalam berbagai aplikasi di mana data mengandung banyak noise atau kesalahan pengukuran, seperti dalam pengolahan citra atau pengolahan data geospasial.

from sklearn.linear_model import RANSACRegressor
from sklearn.pipeline import Pipeline
from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import StandardScaler
from sklearn.datasets import make_regression
from sklearn.model_selection import train_test_split

# Membuat dataset dengan outlier
X, y = make_regression(n_samples=200, n_features=2, noise=10, random_state=42)
y[::10] += 100  # Menambahkan outlier

# Membagi dataset
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Membuat pipeline dengan ColumnTransformer untuk scaling dan RANSAC Regressor
pipeline = Pipeline(steps=[
    ('preprocessor', ColumnTransformer([
        ('scaler', StandardScaler(), [0, 1])  # Scaling fitur
    ])),
    ('regressor', RANSACRegressor())  # Model RANSAC Regressor
])

# Melatih model
pipeline.fit(X_train, y_train)

# Evaluasi model
print("Score RANSAC Regressor:", pipeline.score(X_test, y_test))

Penjelasan Pipeline:

ColumnTransformer digunakan untuk scaling fitur sebelum dimasukkan ke dalam model RANSAC dalam pipeline. Ini memastikan bahwa RANSAC bekerja dengan data yang sudah distandarisasi.



Kesimpulan
Huber Regressor cocok digunakan saat ada outlier dalam data, karena menggunakan Huber Loss yang mengurangi penalti untuk error besar, menjaga kestabilan model.
Theil-Sen Estimator adalah metode regresi robust yang sangat cocok untuk data yang mengandung banyak noise atau outlier, dengan mengestimasi garis regresi menggunakan median dari kemiringan.
RANSAC sangat efektif saat data memiliki banyak outlier ekstrem, karena memilih subset acak data untuk membangun model yang paling representatif.








Metode Regresi	Kelebihan	Kekurangan	Jenis Dataset yang Cocok
Huber Regressor	- Robust terhadap outlier moderat.	- Lebih sensitif terhadap outlier yang sangat ekstrim dibandingkan RANSAC atau Theil-Sen.	- Dataset dengan beberapa outlier moderat yang tidak terlalu ekstrem.
- Lebih efisien secara komputasi dibandingkan RANSAC.	- Tidak seefektif Theil-Sen untuk outlier yang sangat banyak.	- Dataset dengan noise sedang, seperti data keuangan atau pengukuran eksperimen.
Theil-Sen Estimator	- Sangat robust terhadap outlier yang ekstrem dan banyak.	- Lebih lambat dan kurang efisien jika dataset sangat besar.	- Dataset dengan banyak outlier ekstrem (misalnya data eksperimen ilmiah).
- Menggunakan median dari kemiringan, yang membuatnya tidak terpengaruh oleh outlier.	- Kurang efektif untuk data yang sangat bersih atau tidak mengandung outlier.	- Data yang mengandung noise atau kesalahan pengukuran.
RANSAC	- Sangat efektif dalam menangani data dengan banyak outlier.	- Kinerja buruk jika proporsi inliers sangat kecil.	- Dataset dengan banyak outlier yang ekstrem dan banyak data tidak relevan.
- Dapat mengidentifikasi subset yang relevan dari data untuk membangun model yang lebih baik.	- Menghasilkan model yang bisa lebih bervariasi tergantung pada subset acak yang dipilih.	- Dataset yang sangat bising atau data dengan kesalahan sensor yang besar.
Penjelasan Tabel:
Huber Regressor:

Kelebihan:
Huber Regressor sangat bagus ketika dataset mengandung beberapa outlier moderat, karena menggunakan Huber loss yang mengurangi dampak dari outlier tanpa terlalu mempengaruhi data yang lebih umum.
Selain itu, algoritma ini lebih efisien dibandingkan dengan RANSAC, sehingga cocok untuk dataset yang lebih besar.
Kekurangan:
Jika dataset mengandung outlier ekstrim, Huber Regressor mungkin masih terpengaruh meskipun tidak sebesar regresi linier biasa.
Tidak seefektif Theil-Sen Estimator dalam menangani banyak outlier ekstrem.
Theil-Sen Estimator:

Kelebihan:
Theil-Sen adalah metode yang sangat robust terhadap outlier ekstrem, karena menggunakan median kemiringan untuk menghitung garis regresi. Ini sangat berguna ketika data mengandung banyak outlier besar.
Sangat baik untuk data dengan distribusi yang tidak normal atau memiliki noise yang signifikan.
Kekurangan:
Kurang efisien pada dataset yang sangat besar, karena membutuhkan perhitungan kemiringan untuk semua pasangan titik.
Tidak cocok jika dataset sangat bersih atau tidak mengandung banyak outlier.
RANSAC:

Kelebihan:
RANSAC adalah pilihan terbaik ketika dataset mengandung banyak outlier ekstrem. Algoritma ini memilih subset acak dari data untuk membangun model, sehingga outlier yang sangat besar tidak akan merusak model.
Cocok untuk data dengan kesalahan sensor atau data yang sangat bising.
Kekurangan:
Kinerja buruk jika sebagian besar data adalah inliers (data yang relevan), karena RANSAC lebih bergantung pada pengenalan subset yang benar-benar mewakili data.
Hasilnya bisa lebih bervariasi tergantung pada subset acak yang dipilih.
Kesimpulan:
Jika outlier moderat ada dan dataset cukup besar, Huber Regressor adalah pilihan yang efisien.
Untuk dataset dengan outlier ekstrem dan banyak data noise, Theil-Sen Estimator lebih tahan terhadap gangguan data, meskipun lebih lambat.
RANSAC sangat cocok ketika dataset mengandung banyak outlier ekstrim dan Anda ingin mencari subset data yang valid tanpa terpengaruh oleh kesalahan besar.